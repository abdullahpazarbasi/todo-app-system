apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Chart.Name }}-ss
spec:
  serviceName: {{ .Chart.Name }}-s
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Chart.Name }}-ss
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}-ss
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.registry }}/{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.container.port }}
          env:
          {{- range $key, $value := .Values.env }}
            - name: {{ $key }}
              value: {{ $value | quote }}
          {{- end }}
          livenessProbe:
            exec:
              command:
                - mysqladmin
                - ping
                - -h
                - localhost
                - -u
                - root
                - -p{{ .Values.env.MYSQL_ROOT_PASSWORD }}
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
          readinessProbe:
            exec:
              command:
                - mysql
                - -u
                - root
                - -p{{ .Values.env.MYSQL_ROOT_PASSWORD }}
                - -e
                - 'SELECT 1'
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
          volumeMounts:
            - name: {{ .Chart.Name }}-ps
              mountPath: /var/lib/mysql
  volumeClaimTemplates:
    - metadata:
        name: {{ .Chart.Name }}-ps
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 1Gi
